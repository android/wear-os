name: AlwaysOnKotlin

on:
  push:
    branches:
      - main
    paths:
      - 'AlwaysOnKotlin/**'
  pull_request:
    paths:
      - 'AlwaysOnKotlin/**'

env:
  SAMPLE_PATH: AlwaysOnKotlin

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Generate cache key
        run: ./scripts/checksum.sh $SAMPLE_PATH checksum.txt

      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches/modules-*
            ~/.gradle/caches/jars-*
            ~/.gradle/caches/build-cache-*
          key: gradle-${{ hashFiles('checksum.txt') }}

      - name: Build project
        working-directory: ${{ env.SAMPLE_PATH }}
        run: ./gradlew check --stacktrace

      - name: Upload views build outputs (APKs)
        uses: actions/upload-artifact@v3
        with:
          name: build-outputs
          path: ${{ env.SAMPLE_PATH }}/views/build/outputs

      - name: Upload views build reports
        uses: actions/upload-artifact@v3
        with:
          name: build-reports
          path: ${{ env.SAMPLE_PATH }}/views/build/reports

      - name: Upload compose build outputs (APKs)
        uses: actions/upload-artifact@v3
        with:
          name: build-outputs
          path: ${{ env.SAMPLE_PATH }}/compose/build/outputs

      - name: Upload compose build reports
        uses: actions/upload-artifact@v3
        with:
          name: build-reports
          path: ${{ env.SAMPLE_PATH }}/compose/build/reports

  android-test:
    runs-on: macos-latest # enables hardware acceleration in the virtual machine
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        device:
          - roundApi28

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Install pulseaudio
        run: brew install pulseaudio

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Generate cache key
        run: ./scripts/checksum.sh $SAMPLE_PATH checksum.txt

      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches/modules-*
            ~/.gradle/caches/jars-*
            ~/.gradle/caches/build-cache-*
          key: gradle-${{ hashFiles('checksum.txt') }}

      - name: Run instrumentation tests
        working-directory: ${{ env.SAMPLE_PATH }}
        run: ./gradlew ${{ matrix.device }}Check
          -Dorg.gradle.workers.max=1
          -Pandroid.testoptions.manageddevices.emulator.gpu=swiftshader_indirect
          -Pandroid.experimental.testOptions.managedDevices.setupTimeoutMinutes=180
          -Pandroid.experimental.androidTest.numManagedDeviceShards=1
          -Pandroid.experimental.testOptions.managedDevices.maxConcurrentDevices=1
          -Pandroid.experimental.testOptions.managedDevices.emulator.showKernelLogging=false
          --stacktrace

      - name: Upload views test reports
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          path: ${{ env.SAMPLE_PATH }}/views/build/reports

      - name: Upload compose test reports
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          path: ${{ env.SAMPLE_PATH }}/compose/build/reports

  apk:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Generate cache key
        run: ./scripts/checksum.sh $SAMPLE_PATH checksum.txt

      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches/modules-*
            ~/.gradle/caches/jars-*
            ~/.gradle/caches/build-cache-*
          key: gradle-${{ hashFiles('checksum.txt') }}

      - name: Build project
        working-directory: ${{ env.SAMPLE_PATH }}
        run: ./gradlew compose:assembleRelease

      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: App
          path: ${{ env.SAMPLE_PATH }}/compose/build/outputs/apk/release/compose-release.apk
